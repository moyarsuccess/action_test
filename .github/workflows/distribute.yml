name: Release Build

on:
  workflow_call:

jobs:
  test_job:
    name: Unit Tests
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 20
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run Debug Tests
        run: ./gradlew testDebugUnitTest

      - name: Upload Test Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: '**/build/reports/tests/'

  assemble_distribute_job:
    needs: [ test_job ]
    name: Assemble Production Release and Upload to Firebase
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble and Upload to Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          export RELEASE_NOTE=$(git log -1 --pretty=format:"Time: %ad%nHash: %h%nAuthor: %an <%ae>%nMessage: %s")
          ./gradlew assembleProductionLocalRelease appDistributionUploadProductionLocalRelease

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: app/build/outputs/apk/production**/**/**.apk

  notification_job:
    needs: [ assemble_distribute_job ]
    name: Notify Build Status
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: commit,ref,workflow,eventName
          author_name: ${{ github.actor }}
          icon_emoji: ':robot_face:'
          username: "Release Build Status"
          text: |
            ${{ env.WORKFLOW_CONCLUSION }}:
            https://github.com/loopsocial/firework_sdk_v2/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
